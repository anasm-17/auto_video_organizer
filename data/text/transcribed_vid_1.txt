let's get started are you good at the So today we're going to talk about things I have titled lecture which will hopefully make sense soon just sometimes set this whole week we talked about this posted in the read me I have deleted the set cuz the rest of the course was just too rushed and now I'm is really in I have posted fat heels a bit too loud can people hear me sweatshirt play nlg speak more of a standalone thing that needed to be somewhere so we're going to do it today here here's some motivating example so for those of you baby surprising but and when you run it it's not garbage number with you but you can try this in our or whatever Java whatever language you want you going to get here's another one I've added 1000 Best Buy ad such a don't believe me if you don't believe so this is somehow we haven't may not have noticed I'm so let's figure out what's going on here skip this way you can try it I'll say the funny story about this size using Matlab and I submitted people who make me laugh and I said hey thing is broken read this is floating Point issues okay the build-up to the all the way at the beginning of the story just for those which is assuming most of you have seen binary numbers before register super quick review so when we write a number like 52 what we mean by that 21610 s 530 same thing except the base is 2 in I want to write 13 I write it like this do you have a1021 4 1/8 1 + 4 + 8 + 13 Okay so X is an integer and we can read this one one as 1 * 2 to the 3 1/8 4 + 026 + online and if we had a 5 digit number of you have a 16 and 7 in you only need two symbols for the binary code call those symbols y-90 cuz we already have those symbols if you want we don't need another symbol for 2 cuz we can ready like this onesie in binary so we don't need another symbol we we can write everything we okay what about when it gets to like decimals so hold on the 1st numbers are actually stored in your computer in your memory as invited me talk a bit about that earlier in the program so Fitness adjust star from Pickett's line if it's negative and so in python or it most maybe not in Python we use 64 an integer and so I will use the word digit digit number in base ten but we need so what you saw up here bit number and Sophia 64-bit t410s to represent our number and just like with six digit number we have roughly like a million 10 to the 6 84 bit number we can have numbers roughly like 2 ^ but it's Sweeney negative number so it's really aptitude of the 63 are the numbers UK 64-bit just like if you had six digits you could have the hundred thousand to chance of positive 9 9 9 python is actually very weird and how it treats 64-bit integer if you try to make an integer it'll just blow up but handles this fancy Dynamic weather my memory if it needs my memories that's not really normal and it's it's not relevant to what we want to talk about today what we want to talk about today but I still wanted you to know okay next thing I need to review is scientific notation all seen this before but if I have this number whatever 2.34 * 10 ^ 16 16 is going to that's how we're going to write it in 16 minutes * 10 ^ 6 Jerome on it as binary but in our computer if we want to understand something 3 - point because we're not only just dealing with integers binary number I mean binary and that's not a hundred and one it's the binary version are we going to interpret it well if it didn't have the point 1-1 the number would be five it would be 140 114 + 1 is 5 decimal place do for us in our regular life well if this is the 10 to the twos and this is a 10 to the is there a this is just the 10 to the negative one that's it it's just the so it's the exact same thing for binary we have 101.1 one is we have a 2 a wine 1/2 and 1/4 this number any questions about how you get from 101.1 5 and 3/4 Sam got number to okay so yeah I should have said turned it sideways at 101.1 one and then I like this because then I could just write it on the board easy that's what you see there 10111 just so I could say this is the this is the to this is the to the wines this is the to the zeros sister to the negatives I have four 5 1/2 - 3 things on the slide to the power to it just means became this number and saying this is 2 mm 500 and this is a 10 to the negative 1 position this 8 actually means eight it's all the same except for the base too so instead of this meaning 110 this is the number of fours twos ones have other question computer keeps restoring to decimal yeah Alistair binary represent okay let us proceed so let's not do it right now less essentially going back to what we were talking about this is 2 is 1/2 quarters + 1/8 + 2 so in the 10 case like we could have when is 400 500 in the binary case we only you can only have a 4 or not but it's still all the same stuff 1 * 2 Etc okay we will be using this a lot so Viktor with leather speakers what's a letter or a number let's talk about it afterwards next thing fixed point can we let's say we have 64 bits available to to decide in advance how may the things we have seen float like you've converted a pan float or whatever so floating-point but if you haven't everence basically agreed they were going to use 6 32 Etc but these days how are you going to use your 32-bit so here is one suggestion 32 bits on each side of the decimal so blank blank blank I'm not going to dress 32 but blank blank and you can fill in each blank with one or I need to use one of them for positive or negative so maybe you have maybe a 30 so you could have your one. 1001 whatever so it is a real thing but no one uses for what we're trying to achieve and the reason is not practical the biggest number 32 the only 4 billion if you can't have a number bigger than 4 billion machine learning whatever you're doing that's going to be a problem 4 billion us fine I'll just use decimal place and then only after the decimal place that's going to solve it cuz I 60 on the other side your Precision is only is there a wine and now if you want to store number smaller than that you can't 000 0.00001 kind of in trouble and either way I know you can't have big numbers about to talk about for most of the classes how people distraida yes that's right there it in that I want you to see that there's a fight between big numbers and small numbers any ideas about how we can solve this problem Alistair maybe you could put didn't they just have one thing left over to flip like two to the one into the Navy one seemed like the same except for the is closed ascent so you could make it not making a fixed point exactly so the idea is just commit to that we let us location of the decimal point be flooding hence floating point what the point in different places but the problem is on specifying where the point ghosts going into detail the overall save some of our bit doing what we just talked about so so presenting two options but why not just and we'll save everyone and it was really big numbers will put the decimal point put decimal point way over here so we can get really big numbers when we need them Precision for small numbers when Messi here we go the next observation rotation like I know not everyone can see I'm trying to write scientific notation like we just talked about What flowering plants are we just talked about think about what this mean can you write in scientific notation x 10 to the tooth that's saying it's saying this time the two means move the decimal point to and if you had something x 10 to the negative 5 2.5 places to the left so all this time we've been writing stuff what time do the something that's what we've been doing that 10 to the something is just if it's positive I move it to the right if it's negative I move it find my phone. that's why scientific notation is so fundamental cuz it is kind of inherently what we're talking about we're just going to spend summer storing this thing which is going to be called the mantissa we're going to spend summer language is going to become the exponent however it just gets one of the most annoying things is that the standard floating-point that ever 1 points is it instead of allowing us to store any is this may have made more sense like some giant integer replace the left or whatever going to be one point and then you're going to have a bunch of bits to represent m .004 1.11 .001 one whatever but the one point has been and the rest of these bits are kinda meant to say like I said what times 10 to the something is going to be exponent and I need a sign bit I can be negative meaning is smaller than mine and the sign bit so you actually need the first one thing is the whole number is it a big number or a little number okay Honda stable people have not known what I was taught I want to show you some numbers show you how we translate them into this language every number we need to transform it into one point times 2 to the power of other stuff that's what we need to do what's the number to is it going to be 1.0 * 2 ^ 1 cuz one time and so in binary that X 50 hour and 1/2 the mantissa is 0 that's and the exponent is one that's this right here well yeah let me take questions first I hear some whispering oh okay the second one so second one the number 10 so I'm cocky number 10 like this many we have to write in scientific notation this is where it gets not intuitive it's again one point something 1 and a quarter because that's the way you get 10 out of the system it it seems very unnatural test but it affects going back to work unique way of representing it in this format the one point something always has to be between 1 because it could be 1.0 that salisa could be or one point and so it's always going to be between 1 and then you just shut the decimal place over so b11 is it can't be something * 4 or something no sew just the fact that I'm you 5 + 3 symbols that's what I mean by Phase 10 in binary symbols Now 1 and 1/4 looks like this one 1 and 0/2 and 1/4 * 2 to the end so now what is the meant to say 1 and what is the exponent I'm just 